package api

import (
	"encoding/json"
	"fmt"
	"koding/db/mongodb/modelhelper"
	"socialapi/models"
	"socialapi/rest"
	"socialapi/workers/payment"

	. "github.com/smartystreets/goconvey/convey"
	stripe "github.com/stripe/stripe-go"
	"github.com/stripe/stripe-go/coupon"
	"github.com/stripe/stripe-go/plan"
	"github.com/stripe/stripe-go/token"
	"gopkg.in/mgo.v2/bson"
)

func withStubData(endpoint string, f func(username string, groupName string, sessionID string)) {
	createUrl := fmt.Sprintf("%s%s", endpoint, EndpointCustomerCreate)
	deleteUrl := fmt.Sprintf("%s%s", endpoint, EndpointCustomerDelete)

	acc, _, groupName := models.CreateRandomGroupDataWithChecks()

	group, err := modelhelper.GetGroup(groupName)
	So(err, ShouldBeNil)
	So(group, ShouldNotBeNil)

	err = modelhelper.MakeAdmin(bson.ObjectIdHex(acc.OldId), group.Id)
	So(err, ShouldBeNil)

	ses, err := models.FetchOrCreateSession(acc.Nick, groupName)
	So(err, ShouldBeNil)
	So(ses, ShouldNotBeNil)

	req, err := json.Marshal(&stripe.CustomerParams{})
	So(err, ShouldBeNil)
	So(req, ShouldNotBeNil)

	res, err := rest.DoRequestWithAuth("POST", createUrl, req, ses.ClientId)
	So(err, ShouldBeNil)
	So(res, ShouldNotBeNil)

	f(acc.Nick, groupName, ses.ClientId)

	res, err = rest.DoRequestWithAuth("DELETE", deleteUrl, nil, ses.ClientId)
	So(err, ShouldBeNil)
	So(res, ShouldNotBeNil)
}

func withTestPlan(f func(planID string)) {
	pp := &stripe.PlanParams{
		Amount:        0,
		Interval:      plan.Month,
		IntervalCount: 1,
		TrialPeriod:   0,
		Name:          "Free Forever",
		Currency:      payment.USD,
		ID:            fmt.Sprintf("p_%s", bson.NewObjectId().Hex()),
		Statement:     "FREE",
	}

	_, err := plan.New(pp)
	So(err, ShouldBeNil)

	f(pp.ID)

	_, err = plan.Del(pp.ID)
	So(err, ShouldBeNil)
}

func withTestCreditCardToken(f func(token string)) {
	t, err := token.New(&stripe.TokenParams{
		Card: &stripe.CardParams{
			Number: "4242424242424242",
			Month:  "12",
			Year:   "2020",
			CVC:    "123",
		},
	})
	So(err, ShouldBeNil)
	So(t, ShouldNotBeNil)
	f(t.ID)
}

func withTestCoupon(f func(string)) {
	c, err := coupon.New(&stripe.CouponParams{
		Amount:   100,
		Duration: "once",
		Currency: "usd",
		// id will be autogenerated
		// ID:       fmt.Sprintf("coupon_%s", bson.NewObjectId().Hex()),
	})
	So(err, ShouldBeNil)
	So(c, ShouldNotBeNil)
	f(c.ID)
	c1, err := coupon.Del(c.ID)
	So(err, ShouldBeNil)
	So(c1, ShouldNotBeNil)
	So(c1.Deleted, ShouldBeTrue)
}
